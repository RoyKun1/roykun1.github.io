<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Thinkphp6——环境配置篇</title>
    <url>/2020/02/29/Thinkphp6%E2%80%94%E2%80%94%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E7%AF%87/</url>
    <content><![CDATA[<h1 id="thinkphp6基础笔记-连载"><a href="#thinkphp6基础笔记-连载" class="headerlink" title="thinkphp6基础笔记[连载]"></a>thinkphp6基础笔记[连载]</h1><h2 id="环境配置篇"><a href="#环境配置篇" class="headerlink" title="环境配置篇"></a>环境配置篇</h2><p>主流的PHP框架有Laravel，Thinkphp，Yii，作为一款国产轻量级的中型框架，有易于上手，有丰富的中文文档，框架的兼容性较强等优点，目前已更新至tp6。</p>
<h3 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h3><ul>
<li><p><code>6.0</code> 版本开始，必须通过 <code>Composer</code> 方式安装和更新，无法通过 <code>Git</code> 下载安装。</p>
</li>
<li><p>PHP &gt;= 7.1.0</p>
<p>在windows中，<a href="https://getcomposer.org/Composer-Setup.exe" target="_blank" rel="noopener">下载Composer软件</a></p>
<blockquote>
<p>第一步：双击下载好的composer运行程序<br>第二步：选择要安装的盘符<br>第三步：选择php版本。如果你是集成包环境，就到集成包里找php<br>第四步：全部下一步</p>
</blockquote>
<p>设置 Composer 下载源</p>
<ul>
<li>先设置 <code>Composer</code> 的下载源，也是镜像地址</li>
<li>在命令行窗口或控制台 输入</li>
</ul>
<blockquote>
<p>composer config -g repo.packagist composer <a href="https://packagist.phpcomposer.com" target="_blank" rel="noopener">https://packagist.phpcomposer.com</a></p>
</blockquote>
<ul>
<li>国外的网站速度慢，官网建议使用国内镜像（阿里云）</li>
</ul>
<blockquote>
<p>composer config -g repo.packagist composer <a href="https://mirrors.aliyun.com/composer" target="_blank" rel="noopener">https://mirrors.aliyun.com/composer</a></p>
</blockquote>
<p>安装ThinkPHP6</p>
<ul>
<li>先切换到你自己的php环境根目录</li>
</ul>
<blockquote>
<p>cd d:/phpstudy/www</p>
</blockquote>
<ul>
<li>在执行下载<code>Thinkphp6</code>命令。最后的tp6，是新建的tp6目录，可自行更改</li>
</ul>
<blockquote>
<p>composer create-project topthink/think tp</p>
</blockquote>
<ul>
<li>更新<code>Thinkphp6</code>核心</li>
</ul>
<blockquote>
<p>composer update topthink/framework</p>
</blockquote>
<ul>
<li>注：安装和更新命令所在的目录是不同的，更新必须在你的应用根目录下面执行</li>
</ul>
<p>目录结构</p>
<ul>
<li><p>6.0版本目录结构的主要变化是核心框架纳入<code>vendor</code>目录，然后原来的<code>application</code>目录变成<code>app</code>目录。</p>
</li>
<li><p>安装后的目录结构就是一个单应用模式</p>
</li>
<li><p>在 <code>mac</code> 或者 <code>linux</code> 环境下面，注意需要设置 <code>runtime</code> 目录权限为777</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">www  WEB部署目录（或者子目录）</span><br><span class="line">├─app           应用目录</span><br><span class="line">│  ├─controller      控制器目录</span><br><span class="line">│  ├─model           模型目录</span><br><span class="line">│  ├─ ...            更多类库目录</span><br><span class="line">│  │</span><br><span class="line">│  ├─common.php         公共函数文件</span><br><span class="line">│  └─event.php          事件定义文件</span><br><span class="line">│</span><br><span class="line">├─config                配置目录</span><br><span class="line">│  ├─app.php            应用配置</span><br><span class="line">│  ├─cache.php          缓存配置</span><br><span class="line">│  ├─console.php        控制台配置</span><br><span class="line">│  ├─cookie.php         Cookie配置</span><br><span class="line">│  ├─database.php       数据库配置</span><br><span class="line">│  ├─filesystem.php     文件磁盘配置</span><br><span class="line">│  ├─lang.php           多语言配置</span><br><span class="line">│  ├─log.php            日志配置</span><br><span class="line">│  ├─middleware.php     中间件配置</span><br><span class="line">│  ├─route.php          URL和路由配置</span><br><span class="line">│  ├─session.php        Session配置</span><br><span class="line">│  ├─trace.php          Trace配置</span><br><span class="line">│  └─view.php           视图配置</span><br><span class="line">│</span><br><span class="line">├─view            视图目录</span><br><span class="line">├─route                 路由定义目录</span><br><span class="line">│  ├─route.php          路由定义文件</span><br><span class="line">│  └─ ...</span><br><span class="line">│</span><br><span class="line">├─public                WEB目录（对外访问目录）</span><br><span class="line">│  ├─index.php          入口文件</span><br><span class="line">│  ├─router.php         快速测试文件</span><br><span class="line">│  └─.htaccess          用于apache的重写</span><br><span class="line">│</span><br><span class="line">├─extend                扩展类库目录</span><br><span class="line">├─runtime               应用的运行时目录（可写，可定制）</span><br><span class="line">├─vendor                Composer类库目录</span><br><span class="line">├─.example.env          环境变量示例文件</span><br><span class="line">├─composer.json         composer 定义文件</span><br><span class="line">├─LICENSE.txt           授权说明文件</span><br><span class="line">├─README.md             README 文件</span><br><span class="line">├─think                 命令行入口文件</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>运行<code>Thinkphp6</code></p>
<ul>
<li>我使用的是集成环境phpStudy，编辑器sublime，数据库管理工具Navicat</li>
<li>在Windows中，在C:\Windows\System32\drivers\etc 目录下，打开 hosts文件，设置虚拟域名</li>
<li>在集成环境——站点管理中将入口执行tp6/public目录下即可</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>thinkphp6</tag>
      </tags>
  </entry>
  <entry>
    <title>想知道Hexo&amp;next的操作吗？</title>
    <url>/2020/02/27/%E6%83%B3%E7%9F%A5%E9%81%93Hexo-next%E7%9A%84%E6%93%8D%E4%BD%9C%E5%90%97%EF%BC%9F/</url>
    <content><![CDATA[<h2 id="使用Hexo-next个性化自己的github博客"><a href="#使用Hexo-next个性化自己的github博客" class="headerlink" title="使用Hexo+next个性化自己的github博客"></a>使用Hexo+next个性化自己的github博客</h2><ul>
<li>这篇文章会告诉你怎么做<blockquote>
<p><a href="http://mashirosorata.vicp.io/" target="_blank" rel="noopener">http://mashirosorata.vicp.io/</a></p>
</blockquote>
</li>
</ul>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use Hexo</title>
    <url>/2020/02/27/How-to-use-Hexo/</url>
    <content><![CDATA[<h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><ul>
<li>作为学习PythonWeb的入门，依托github搭建个人博客，以后的项目代码和笔记均托管在这里。由于静态网站加载快易被搜索引擎检索到，我们使用hexo(a fast simple&amp;powerful blog framework)搭建框架。</li>
</ul>
<h2 id="二、站点搭建"><a href="#二、站点搭建" class="headerlink" title="二、站点搭建"></a>二、站点搭建</h2><h3 id="1-git-amp-GitHub"><a href="#1-git-amp-GitHub" class="headerlink" title="1. git &amp; GitHub"></a>1. git &amp; GitHub</h3><ul>
<li><p>系统学习了git，自己的github账号：</p>
<blockquote>
<p><a href="https://github.com/RoyKun1" target="_blank" rel="noopener">https://github.com/RoyKun1</a></p>
</blockquote>
</li>
<li><p>搭建网站需要建立名为/roykun1.github.io的git仓库，可以访问：</p>
<blockquote>
<p><a href="https://roykun1.github.io/" target="_blank" rel="noopener">https://roykun1.github.io/</a></p>
</blockquote>
<h3 id="2-Hexo"><a href="#2-Hexo" class="headerlink" title="2. Hexo"></a>2. Hexo</h3><blockquote>
<p><a href="https://hexo.io/" target="_blank" rel="noopener">https://hexo.io/</a></p>
</blockquote>
</li>
<li><p>可以参考这个教程学习：</p>
<blockquote>
<p><a href="https://blog.csdn.net/u011475210/article/details/79023429#%E5%89%8D%E8%A8%80" target="_blank" rel="noopener">https://blog.csdn.net/u011475210/article/details/79023429#%E5%89%8D%E8%A8%80</a></p>
</blockquote>
</li>
</ul>
<h4 id="ensp-ensp-Hexo的优点"><a href="#ensp-ensp-Hexo的优点" class="headerlink" title="&ensp;&ensp;Hexo的优点"></a>&ensp;&ensp;Hexo的优点</h4><ul>
<li><p>支持Markdown格式</p>
</li>
<li><p>有众多优秀插件和主题</p>
</li>
<li><p>文档完善</p>
<h4 id="ensp-ensp-安装和使用"><a href="#ensp-ensp-安装和使用" class="headerlink" title="&ensp;&ensp;安装和使用"></a>&ensp;&ensp;安装和使用</h4></li>
<li><p>安装node.js</p>
<ol>
<li><p>官网下载：<br><code>https://nodejs.org/en/download/</code></p>
</li>
<li><p>选择LTS版本，选择偶数的NodeJS版本，例如：8、10，因为偶数是长期稳定版本，有较好的兼容性。</p>
</li>
<li><p>双击运行安装包，其他默认就好</p>
</li>
<li><p>查看版本： win R; node -v    <code>10.16.3</code></p>
</li>
<li><p>新版的Node.js已自带npm，安装Node.js时会一起安装，npm的作用就是对Node.js依赖的包进行管理</p>
</li>
<li><p>需要进行一些环境变量的配置：<code>https://blog.csdn.net/cai454692590/article/details/86093297</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![](https:&#x2F;&#x2F;i.imgur.com&#x2F;z9Cnjew.png)</span><br><span class="line">由于markdown的国内服务器好像被屏蔽，需要翻q才能显示</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>安装hexo</p>
<ol>
<li>在git bash中使用命令： <code>npm install -g hexo-cli</code></li>
<li>查看是否安装成功：<code>hexo -v</code> 在bash中command not found，但是在cmd中是可以的<br>解决这个问题：使用管理员身份运行git bash</li>
</ol>
</li>
<li><p>使用hexo新建站点</p>
<ol>
<li><p>新建目录githubBlog</p>
</li>
<li><p>使用命令：<code>hexo init ./githubBlog</code> 由于bash有问题，在cmd中执行；执行成功会显示<code>INFO  Start blogging with Hexo!</code></p>
</li>
<li><p>进入目录，执行命令：<br> <code>npm install</code>或者<code>sudo npm install</code></p>
</li>
<li><p>启动服务：<code>hexo server</code><br>会有提示信息：<code>INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</code><br>我们访问这个地址即可看到hexo为我们初始化的界面！</p>
</li>
<li><p>将代码上传到github站点<br>首先要清空之前的上传：<br>&ensp;&ensp;<code>settings-&gt;delete repository</code><br>在githubBlog目录下安装一个插件：<br>&ensp;&ensp;<code>npm i -save hexo-deployer-git</code><br>在生成的文件_config.yml最后写入如下代码：</p>
<pre><code>deploy:
    type: git
    repo: https://github.com/RoyKun1/roykun1.github.io
    branch: master  </code></pre><p>在目录下执行：<br>&ensp;&ensp;<code>hexo d -g</code><br>进入隐藏目录：.deploy_git，声明github账号：由于我们已经在本地生成了密钥传至github，所以此时已经将代码传至，使用 <code>https://roykun1.github.io</code> 访问      </p>
</li>
<li><p>新建文章<br>使用命令： <code>hexo new &quot;我的第一篇博客&quot;</code> ，出现信息： <code>INFO  Created: D:\gitwork\githubBlog\source\_posts\我的第一篇博客.md</code></p>
</li>
<li><p>更换主题<br>官方主题：<code>https://hexo.io/themes/</code><br>如果我们喜欢其他的主题比如：<code>https://github.com/CodeDaraW/Hacker</code> 将源码下载到本地直接放在themes目录下面；然后执行 <code>hexo clean</code> 清楚缓存；再使用 <code>hexo d -g</code> 上传部署即可  </p>
<ul>
<li>注：可能需要等一会儿样式才会刷新出来，并不需要将themes进行add/commit<br>我们可以使用next定义博客的风格样式：<br><code>http://theme-next.iissnan.com/third-party-services.html</code></li>
</ul>
</li>
</ol>
</li>
</ul>
<h2 id="三、编写个人博客"><a href="#三、编写个人博客" class="headerlink" title="三、编写个人博客"></a>三、编写个人博客</h2><blockquote>
<p>使用命令：<code>hexo new &quot;title&quot;</code>即可创建文章，一般在source/_post文件夹下<br>头部包含时间、标签，可以修改<br>编辑好文章后使用<code>hexo clean</code>和<code>hexo d -g</code>提交即可</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/02/27/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Thinkphp6——基础与视图</title>
    <url>/2019/12/26/Thinkphp6%E2%80%94%E2%80%94%E5%9F%BA%E7%A1%80%E4%B8%8E%E8%A7%86%E5%9B%BE/</url>
    <content><![CDATA[<h1 id="Thinkphp6——基础与视图篇"><a href="#Thinkphp6——基础与视图篇" class="headerlink" title="Thinkphp6——基础与视图篇"></a>Thinkphp6——基础与视图篇</h1><ul>
<li>ThinkPHP支持传统的MVC（Model-View-Controller）模式以及流行的MVVM（Model-View-ViewModel）模式的应用开发</li>
</ul>
<hr>
<h2 id="一、MVC"><a href="#一、MVC" class="headerlink" title="一、MVC"></a>一、MVC</h2><ul>
<li><code>MVC</code> 软件系统分为三个基本部分：模型（Model）、视图（View）和控制器（Controller）</li>
<li><code>ThinkPHP</code> 是一个典型的 <code>MVC</code> 架构</li>
</ul>
<blockquote>
<p>控制器 - 负责转发请求，对请求进行处理。<br>视图 - 界面设计人员进行图形界面设计。<br>模型 - 程序员编写程序应有的功能（实现算法等等）、数据库专家进行数据管理和数据库设计(可以实现具体的功能)。</p>
</blockquote>
<p><img src="http://bew.czgzweb.com/php/mvc.gif" alt="mvc"></p>
<hr>
<h2 id="二、单应用模式访问"><a href="#二、单应用模式访问" class="headerlink" title="二、单应用模式访问"></a>二、单应用模式访问</h2><ul>
<li>项目访问路径：<a href="http://www.xxx.com/index.php/index/index" target="_blank" rel="noopener">www.tp6.com/index.php/index/index</a></li>
</ul>
<blockquote>
<p>index.php 入口文件，在tp6/public目录下<br>index 控制器<br>index 操作</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">├─app           应用目录</span><br><span class="line">│  ├─controller      控制器目录</span><br><span class="line">│  ├─model           模型目录</span><br><span class="line">│  ├─ ...            更多类库目录</span><br><span class="line">│  │</span><br><span class="line">│  ├─common.php         公共函数文件</span><br><span class="line">│  └─event.php          事件定义文件</span><br><span class="line">│</span><br><span class="line">├─config                配置目录</span><br><span class="line">│  ├─app.php            应用配置</span><br><span class="line">│  ├─cache.php          缓存配置</span><br><span class="line">│  ├─console.php        控制台配置</span><br><span class="line">│  ├─cookie.php         Cookie配置</span><br><span class="line">│  ├─database.php       数据库配置</span><br><span class="line">│  ├─filesystem.php     文件磁盘配置</span><br><span class="line">│  ├─lang.php           多语言配置</span><br><span class="line">│  ├─log.php            日志配置</span><br><span class="line">│  ├─middleware.php     中间件配置</span><br><span class="line">│  ├─route.php          URL和路由配置</span><br><span class="line">│  ├─session.php        Session配置</span><br><span class="line">│  ├─trace.php          Trace配置</span><br><span class="line">│  └─view.php           视图配置</span><br><span class="line">│</span><br><span class="line">├─view            视图目录</span><br><span class="line">├─route                 路由定义目录</span><br><span class="line">│  ├─route.php          路由定义文件</span><br><span class="line">│  └─ ...</span><br><span class="line">│</span><br><span class="line">├─<span class="keyword">public</span>                WEB目录（对外访问目录）</span><br><span class="line">│  ├─index.php          入口文件</span><br><span class="line">│  ├─router.php         快速测试文件</span><br><span class="line">│  └─.htaccess          用于apache的重写</span><br><span class="line">│</span><br><span class="line">├─extend                扩展类库目录</span><br><span class="line">├─runtime               应用的运行时目录（可写，可定制）</span><br><span class="line">├─vendor                Composer类库目录</span><br><span class="line">├─.example.env          环境变量示例文件</span><br><span class="line">├─composer.json         composer 定义文件</span><br><span class="line">├─LICENSE.txt           授权说明文件</span><br><span class="line">├─README.md             README 文件</span><br><span class="line">├─think                 命令行入口文件</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="三、安装视图"><a href="#三、安装视图" class="headerlink" title="三、安装视图"></a>三、安装视图</h2><ul>
<li>视图功能由\think\View类配合视图驱动（也即模板引擎驱动）类一起完成，新版仅内置了PHP原生模板引擎（主要用于内置的异常页面输出），如果需要使用其它的模板引擎需要单独安装相应的模板引擎扩展</li>
<li>因此，你需要在命令行运行下面这行指令：</li>
</ul>
<blockquote>
<p>composer require topthink/think-view</p>
</blockquote>
<ul>
<li>视图目录可以在根目录，也可以在app应用目录</li>
</ul>
<hr>
<h2 id="四、模版渲染"><a href="#四、模版渲染" class="headerlink" title="四、模版渲染"></a>四、模版渲染</h2><ul>
<li>要使用View，必须先引入 <code>think\facade\View</code> 门面类</li>
<li><code>fetch</code> 方法渲染页面</li>
</ul>
<blockquote>
<p>controller代码</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controller</span>;	<span class="comment">// 命名空间</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">View</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> View::fetch();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="C:%5CUsers%5Cszspl%5CDesktop%5C%E5%9B%BE%E7%89%871.png" alt="图片1"></p>
<ul>
<li>注：一个控制器的类对应一个view视图的目录，这个类中的<strong><em>方法</em></strong>，对应这个目录中的html<strong><em>页面</em></strong></li>
</ul>
<hr>
<h2 id="五、模版变量"><a href="#五、模版变量" class="headerlink" title="五、模版变量"></a>五、模版变量</h2><ul>
<li>在控制器中使用<code>assign</code> 方法给全局变量赋值，这个变量也叫作模板变量<br>注：要区分模板和模型的概念</li>
<li>在视图页面中使用 <code>{$name}</code>输出模板变量值</li>
</ul>
<blockquote>
<p>controller代码</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">View</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 模板变量赋值</span></span><br><span class="line">        View::assign(<span class="string">'name'</span>,<span class="string">'欧阳克'</span>);</span><br><span class="line">        View::assign(<span class="string">'email'</span>,<span class="string">'oyk@php.cn'</span>);</span><br><span class="line">        <span class="comment">// 或者批量赋值</span></span><br><span class="line">        View::assign([</span><br><span class="line">            <span class="string">'name'</span>  =&gt; <span class="string">'Roy'</span>,</span><br><span class="line">            <span class="string">'email'</span> =&gt; <span class="string">'szsplyr@163.com'</span></span><br><span class="line">        ]);</span><br><span class="line">        <span class="comment">// 模板输出</span></span><br><span class="line">        <span class="keyword">return</span> View::fetch();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>view代码</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>ThinkPHP6<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    姓名：&#123;$name&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    邮箱：&#123;$email&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>thinkphp6</tag>
      </tags>
  </entry>
</search>
